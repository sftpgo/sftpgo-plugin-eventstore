name: Build

on:
  push:
    branches: [main]
  pull_request:

permissions:
  id-token: write
  contents: read

env:
  GO_VERSION: '1.24'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build
        run: |
          go install github.com/tc-hib/go-winres@latest
          GIT_COMMIT=`git describe --always --dirty`
          LATEST_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))
          NUM_COMMITS_FROM_TAG=$(git rev-list ${LATEST_TAG}.. --count)
          VERSION=$(echo "${LATEST_TAG}" | awk -F. -v OFS=. '{$NF++;print}')-dev.${NUM_COMMITS_FROM_TAG}
          FILE_VERSION=${LATEST_TAG:1}.${NUM_COMMITS_FROM_TAG}

          mkdir bin
          go-winres simply --arch amd64 --product-version $VERSION-$GIT_COMMIT --file-version $FILE_VERSION --file-description "SFTPGo plugin eventstore" --product-name "SFTPGo plugin eventstore" --copyright "AGPL-3.0" --original-filename sftpgo-plugin-eventstore-windows-x86_64.exe --icon res/icon.ico
          CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -trimpath -ldflags "-s -w -X github.com/sftpgo/sftpgo-plugin-eventstore/cmd.commitHash=`git describe --always --dirty` -X github.com/sftpgo/sftpgo-plugin-eventstore/cmd.buildDate=`date -u +%FT%TZ`" -o bin/sftpgo-plugin-eventstore-windows-x86_64.exe
          go-winres simply --arch arm64 --product-version $VERSION-$GIT_COMMIT --file-version $FILE_VERSION --file-description "SFTPGo plugin eventstore" --product-name "SFTPGo plugin eventstore" --copyright "AGPL-3.0" --original-filename sftpgo-plugin-eventstore-windows-arm64.exe --icon res/icon.ico
          CGO_ENABLED=0 GOOS=windows GOARCH=arm64 go build -trimpath -ldflags "-s -w -X github.com/sftpgo/sftpgo-plugin-eventstore/cmd.commitHash=`git describe --always --dirty` -X github.com/sftpgo/sftpgo-plugin-eventstore/cmd.buildDate=`date -u +%FT%TZ`" -o bin/sftpgo-plugin-eventstore-windows-arm64.exe
          go-winres simply --arch 386 --product-version $VERSION-$GIT_COMMIT --file-version $FILE_VERSION --file-description "SFTPGo plugin eventstore" --product-name "SFTPGo plugin eventstore" --copyright "AGPL-3.0" --original-filename sftpgo-plugin-eventstore-windows-x86.exe --icon res/icon.ico
          CGO_ENABLED=0 GOOS=windows GOARCH=386 go build -trimpath -ldflags "-s -w -X github.com/sftpgo/sftpgo-plugin-eventstore/cmd.commitHash=`git describe --always --dirty` -X github.com/sftpgo/sftpgo-plugin-eventstore/cmd.buildDate=`date -u +%FT%TZ`" -o bin/sftpgo-plugin-eventstore-windows-x86.exe
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -trimpath -ldflags "-s -w -X github.com/sftpgo/sftpgo-plugin-eventstore/cmd.commitHash=`git describe --always --dirty` -X github.com/sftpgo/sftpgo-plugin-eventstore/cmd.buildDate=`date -u +%FT%TZ`" -o bin/sftpgo-plugin-eventstore-linux-amd64
          CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -trimpath -ldflags "-s -w -X github.com/sftpgo/sftpgo-plugin-eventstore/cmd.commitHash=`git describe --always --dirty` -X github.com/sftpgo/sftpgo-plugin-eventstore/cmd.buildDate=`date -u +%FT%TZ`" -o bin/sftpgo-plugin-eventstore-linux-arm64
          CGO_ENABLED=0 GOOS=linux GOARCH=arm GOARM=7 go build -trimpath -ldflags "-s -w -X github.com/sftpgo/sftpgo-plugin-eventstore/cmd.commitHash=`git describe --always --dirty` -X github.com/sftpgo/sftpgo-plugin-eventstore/cmd.buildDate=`date -u +%FT%TZ`" -o bin/sftpgo-plugin-eventstore-linux-armv7
          CGO_ENABLED=0 GOOS=linux GOARCH=ppc64le go build -trimpath -ldflags "-s -w -X github.com/sftpgo/sftpgo-plugin-eventstore/cmd.commitHash=`git describe --always --dirty` -X github.com/sftpgo/sftpgo-plugin-eventstore/cmd.buildDate=`date -u +%FT%TZ`" -o bin/sftpgo-plugin-eventstore-linux-ppc64le
          CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -trimpath -ldflags "-s -w -X github.com/sftpgo/sftpgo-plugin-eventstore/cmd.commitHash=`git describe --always --dirty` -X github.com/sftpgo/sftpgo-plugin-eventstore/cmd.buildDate=`date -u +%FT%TZ`" -o bin/sftpgo-plugin-eventstore-darwin-amd64
          CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -trimpath -ldflags "-s -w -X github.com/sftpgo/sftpgo-plugin-eventstore/cmd.commitHash=`git describe --always --dirty` -X github.com/sftpgo/sftpgo-plugin-eventstore/cmd.buildDate=`date -u +%FT%TZ`" -o bin/sftpgo-plugin-eventstore-darwin-arm64
        shell: bash

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: sftpgo-plugin-eventstore
          path: bin

  sign-windows-binaries:
    name: Sign Windows binaries
    if: ${{ github.event_name != 'pull_request' }}
    environment: signing
    needs: [build]
    runs-on: windows-latest

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v5
        with:
          name: sftpgo-plugin-eventstore
          path: ${{ github.workspace }}/bin

      - name: Azure login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Sign
        uses: azure/trusted-signing-action@v0.5.9
        with:
          endpoint: https://eus.codesigning.azure.net/
          trusted-signing-account-name: nicola
          certificate-profile-name: SFTPGo
          files: |
            ${{ github.workspace }}\bin\sftpgo-plugin-eventstore-windows-x86_64.exe
            ${{ github.workspace }}\bin\sftpgo-plugin-eventstore-windows-arm64.exe
            ${{ github.workspace }}\bin\sftpgo-plugin-eventstore-windows-x86.exe
          file-digest: SHA256
          timestamp-rfc3161: http://timestamp.acs.microsoft.com
          timestamp-digest: SHA256
          exclude-environment-credential: true
          exclude-workload-identity-credential: true
          exclude-managed-identity-credential: true
          exclude-shared-token-cache-credential: true
          exclude-visual-studio-credential: true
          exclude-visual-studio-code-credential: true
          exclude-azure-cli-credential: false
          exclude-azure-powershell-credential: true
          exclude-azure-developer-cli-credential: true
          exclude-interactive-browser-credential: true

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: sftpgo-plugin-eventstore
          path: bin
          overwrite: true

  test-providers:
    name: Test supported providers
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: sftpgo_events
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      mariadb:
        image: mariadb:latest
        env:
          MYSQL_ROOT_PASSWORD: mysql
          MYSQL_DATABASE: sftpgo_events
          MYSQL_USER: sftpgo
          MYSQL_PASSWORD: sftpgo
        options: >-
          --health-cmd "mariadb-admin status -h 127.0.0.1 -P 3306 -u root -p$MYSQL_ROOT_PASSWORD"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 6
        ports:
          - 3307:3306
    steps:
      - uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Run tests using PostgreSQL provider
        run: |
          go test -v -p 1 -timeout 5m ./... -covermode=atomic
        env:
          SFTPGO_PLUGIN_EVENTSTORE_DRIVER: postgres
          SFTPGO_PLUGIN_EVENTSTORE_DSN: "host='127.0.0.1' port=5432 dbname='sftpgo_events' user='postgres' password='postgres' sslmode=disable connect_timeout=10"

      - name: Run tests using MySQL provider
        run: |
          go test -v -p 1 -timeout 5m ./... -covermode=atomic
        env:
          SFTPGO_PLUGIN_EVENTSTORE_DRIVER: mysql
          SFTPGO_PLUGIN_EVENTSTORE_DSN: "sftpgo:sftpgo@tcp([127.0.0.1]:3307)/sftpgo_events?charset=utf8mb4&interpolateParams=true&timeout=10s&tls=false&writeTimeout=10s&readTimeout=10s&parseTime=true"

  golangci-lint:
    name: golangci-lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'
      - uses: actions/checkout@v5
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: latest